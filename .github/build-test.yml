name: Build & Test

on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string

jobs:
  build-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check Python syntax
        run: |
          python -m py_compile app.py
          echo "‚úÖ Python syntax check passed!"

      - name: Test Flask app startup
        run: |
          echo "üöÄ Starting Flask application..."
          # Start the Flask app in background
          python app.py &
          APP_PID=$!
          
          # Wait for app to start
          echo "‚è≥ Waiting for app to start..."
          sleep 10
          
          # Simple health check test
          echo "üè• Testing health endpoint..."
          if curl -f -s http://localhost:5000/health; then
            echo "‚úÖ Health check passed!"
          else
            echo "‚ùå Health check failed!"
            kill $APP_PID
            exit 1
          fi
          
          # Test API endpoints
          echo "üß™ Testing POST endpoint..."
          RESPONSE=$(curl -s -X POST -H "Content-Type: application/json" \
            -d '{"name":"test","description":"test item"}' \
            http://localhost:5000/items)
          echo "Response: $RESPONSE"
          
          echo "üß™ Testing GET all endpoint..."
          GET_RESPONSE=$(curl -s http://localhost:5000/items)
          echo "Response: $GET_RESPONSE"
          
          # Kill the Flask app
          kill $APP_PID
          echo "‚úÖ All tests passed!"